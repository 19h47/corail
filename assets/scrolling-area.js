!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.ScrollingArea=e():t.ScrollingArea=e()}(self,(()=>(()=>{"use strict";var t={d:(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};function r(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function n(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function i(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}t.r(e),t.d(e,{default:()=>s});var a=function(){return window.pageYOffset||document.documentElement.scrollTop},s=function(){function t(e,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.on={scroll:this.scroll.bind(this),resize:this.resize.bind(this),update:this.update.bind(this)},this.$el=e;var a,s,l=(a=this.$el.children,s=1,function(t){if(Array.isArray(t))return t}(a)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,o=[],a=!0,s=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(o.push(n.value),!e||o.length!==e);a=!0);}catch(t){s=!0,i=t}finally{try{a||null==r.return||r.return()}finally{if(s)throw i}}return o}}(a,s)||function(t,e){if(t){if("string"==typeof t)return n(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(t,e):void 0}}(a,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());this.$child=l[0],this.options=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({container:i.container||this.$el},i),this.vars={bottom:0,spring:.1,target:0,value:0}}var e,s;return e=t,(s=[{key:"init",value:function(){return this.initElements(),this.on.resize(),!(0>Math.round(this.width-this.containerWidth))&&(requestAnimationFrame(this.on.scroll),this.initEvents())}},{key:"initEvents",value:function(){window.addEventListener("resize",this.on.resize)}},{key:"initElements",value:function(){this.$child.style.setProperty("display","inline-block"),this.$child.style.setProperty("white-space","nowrap")}},{key:"scroll",value:function(){var t=(a()+this.windowArea-this.top)/this.windowArea*100;this.vars.target=Math.max(0,Math.min(t,100)),this.update(),requestAnimationFrame(this.on.scroll)}},{key:"resize",value:function(){var t=this.$child.getBoundingClientRect();this.width=t.width,this.height=t.height,this.top=t.top+a()-this.$child.clientTop,this.containerWidth=this.options.container.clientWidth,this.windowArea=window.innerHeight-this.height}},{key:"update",value:function(){this.vars.value+=(this.vars.target-this.vars.value)*this.vars.spring;var t=Math.round(this.vars.value*Math.abs(this.width-this.containerWidth)/100);this.$child.style.setProperty("transform","translate3d(".concat(-1*t,"px, 0, 0)"))}}])&&i(e.prototype,s),Object.defineProperty(e,"prototype",{writable:!1}),t}();return e})()));
